--
--	component:   openEHR Archetype Project
--	description: Archetype Object Model validity errors
--	keywords:    ADL
--	author:      Thomas Beale <thomas.beale@OceanInformatics.com>
--	support:     http://www.openehr.org/issues/browse/AWB
--	copyright:   Copyright (c) 2010- Ocean Informatics Pty Ltd <http://www.oceaninfomatics.com>
--	license:     Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>
--

templates = <
	["en"] = <
		["VASID"] = <"specialised archetype id not based on specialisation parent archetype id">
		["VALC"] = <"specialised archetype languages ($1) invalid - should be same as or a subset of those in flat parent ($2)">
		["VINH"] = <"Inheritance loop detected: supplier $1 inherits current archetype">

		-- description
		["VTRLA"] = <"translations key '$1' does not match translation item language '$2'">
		["VRDLA"] = <"resource detail key '$1' does not match resource detail item language '$2'">

		-- terminology
		["VARDT"] = <"archetype id type $1 does not match type $2 in definition section">
		["VACSD"] = <"specialisation depth of concept code $1 not consistent with specialisation depth of parent archetype $2">
		["VACSDtop"] = <"specialisation depth of concept code $1 not consistent with specialisation depth 0 of archetype">
		["VACCD"] = <"archetype definition has no id-code">
		["VOTM"] = <"translations for $1 defined in the description / translations section but missing in the term_definition section">
		["VATCD"] = <"code $1 specialisation depth greater than that of archetype $2">
		["VATID"] = <"node id-code $1 at path $2 not defined in flat terminology">
		["VATDF"] = <"value code $1 referenced in definition at path $2 not defined in flat terminology">
		["VATDA"] = <"value code $1 used as assumed value in definition at path $2 not defined in value set for $3">
		["VACDF"] = <"value-set id code $1 referenced in definition at path $2 not defined in terminology">
		["VATDC"] = <"at-code $1 used in constraint not defined in flat terminology">
		["VTBK"] = <"term binding key $1 must either be valid term code or valid path in flat archetype">
		["VCBK"] = <"term binding key $1 must be a valid value-set id code">
		["VETDF"] = <"External code $1 not found in terminology $2">
		["WETDF"] = <"External term $1 not verified; terminology $2 unavailable">
		["VATCV"] = <"Invalid id-code $1 found in terminology definitions; code format must follow regex $2">

		-- annotations
		["VRANP1"] = <"Annotation at language $1 has invalid archetype path $2">
		["VRANP2"] = <"Annotation at language $1 has invalid reference model path $2">

		-- C_ATTRIBUTE
		["VSANCE"] = <"attribute at path $1 existence $2 does not conform to parent $3 existence $4">
		["VSANCC"] = <"attribute at path $1 cardinality $2 does not conform to parent $3 cardinality $4">
		["VDIFP1"] = <"differential path $1 should have corresponding node in flat parent at $2 but doesn't">
		["VDIFP2"] = <"differential path $1 not legal with respect to RM">
		["VDIFP3"] = <"differential path $1 does not exist at specialisation level of flat parent">
		["VDIFV"] = <"differential path $1 not allowed in non-specialised archetype">
		["VSAM1"] = <"attribute at path $1 is single-valued but is defined as multiply-valued in flat parent">
		["VSAM2"] = <"attribute at path $1 is multiply-valued but is defined as single-valued in flat parent">

		-- C_OBJECT
		["VCOID"] = <"object with RM type $1 under attribute $2 does not have a node identifier (id-code)">
		["VCOSU"] = <"cannot add $1 object with $2 to attribute $3 because attribute already has child with same node id">
		["VACSO"] = <"cannot add $1 object with $2 to singly-valued attribute $3 because object occurrences > 1">

		["VACMCU"] = <"cannot add $1 object with $2 to multiply-valued attribute $3 because occurrences upper bound $4 is greater than cardinality upper bound $5">
		["WACMCL"] = <"for multiply-valued attribute $1 sum of occurrences lower bounds $2 must be less than cardinality upper limit $3">
		["VACMCO"] = <"for multiply-valued attribute $1, minimum object count $2 must be less than cardinality upper limit $3 (it must be possible for at least one instance of one optional child object and one instance of every mandatory child object to contained in cardinality)">

		["VARCN"] = <"invalid root object node_id (concept code) $1; should follow regex pattern $2">
		["VARND"] = <"invalid object node_id $1; should follow regex pattern $2">
		["VSSM"] = <"node at path $1 has order marker referring to non-existant sibling node $2">

		["VSONI"] = <"$1 object node at path $2 node identifier does not conform to $3 node at parent path $4">
		["VSONIF"] = <"$1 object node at path $2 has node identifier but C_ATTRIBUTE at $3 in flat parent has non-identified object nodes">
		["VSONIN"] = <"object node identifier $1 (RM type $2) at path $3 should have corresponding node in flat parent at $4 but doesn't">
		["VSONIRocc"] = <"object node at path $1 occurrences $2 redefines parent node occurrences $3 but node_id $4 not redefined">
		["VSONIRrm"] = <"object node at path $1 RM type $2 redefines parent node RM type $3 but node_id $4 not redefined">
		["VSCNR"] = <"illegal redefinition of $1 node at $2 in parent into $3 node at $4 in child">
		["VCOCDocc"] = <"object node of RM type $1 at path $2 definition missing (empty definition only allowed when occurrences redefined in specialised child)">
		["VSONID"] = <"object node at path $1, RM type $2, has no node identifier">
		["VSONT"] = <"$1 object node at path $2 (AOM type $3) does not conform to $4 node at parent path $5 (AOM type $6)">
		["VSONCT"] = <"object node at path $1 (RM type $2) does not conform to node at parent path $3 RM type $4">
		["VSONCO"] = <"object node at path $1 occurrences $2 does not conform to node at parent path $3 occurrences $4">
		["VSONPO"] = <"object node at path $1 prohibited occurrences (i.e. {0}) not allowed on a node that does not redefine a node in the flat parent">
		["VSONPT"] = <"object node at path $1 prohibited occurrences (i.e. {0}) not allowed on a node with AOM type $2 that redefines node in the flat parent of different AOM type $3">
		["VSONCI"] = <"object node at path $1 node_id $2 does not conform to node at parent path $3 node_id $4">
		["VCATU"] = <"cADL object duplicate attribute $1">

		-- C_DOMAIN_TYPE
		["VSDTV"] = <"$1 object node at path $2 does not conform to $3 node at parent path $4">

		["VUNK"] = <"$1 object node at path $2 does not conform to $3 node at parent path $4 (unknown reason)">
		["VDTCV"] = <"Conversion of C_DOMAIN_TYPE descendant $1 failed">
		["VDTTU"] = <"C_DOMAIN_TYPE descendant type $1 unknown or not visible in type system">
		["VDTNT"] = <"C_DOMAIN_TYPE descendant type does not include type">
		["WDTOAV"] = <"C_DV_ORDINAL assumed value not supported">


		-- C_COMPLEX_OBJECT_PROXY
		["VUNP"] = <"C_COMPLEX_OBJECT_PROXY path $1 not found in archetype">
		["VSUNT"] = <"node at path $1 AOM type $2 does not conform to node at parent path $3 AOM type $4">
		["VSUNC"] = <"node at path $1 AOM type $2 does not conform to node at parent path $3 AOM type $4">

		-- C_ARCHETYPE_SLOT
		["VDSEV1"] = <"'exclude' constraint of slot of RM type $1 at path $2 invalid; exclude must be either empty or not match 'any' when 'include' matches 'any'">
		["VDSEV2"] = <"'exclude' constraint of slot of RM type $1 at path $2 invalid; exclude must be either empty or match 'any' when 'include' matches non-'any'">
		["VDSIV1"] = <"'include' constraint of slot of RM type $1 at path $2 invalid; include must be either empty or not match 'any' when 'exclude' matches 'any'">
		["VDSIV2"] = <"'include' constraint of slot of RM type $1 at path $2 invalid; include must be either empty or match 'any' when 'exclude' matches non-'any'">
		["VDSSR"] = <"Slot node at path $1 may only redefine parent C_COMPLEX_OBJECT in parent if the latter has no child attributes.">

		-- C_ARCHETYPE_ROOT
		["VARXR"] = <"slot filler at $1 specifies archetype $2 that matches slot but doesn't exist in current repository, or has non-existent ancestor">
		["VARXRA"] = <"external reference at $1 specifies archetype $2 that doesn't exist in current repository">
		["VARXAV"] = <"external reference at $1 specifies archetype $2 that is not a descendant of archetype $3 mentioned in matching parent node">
		["VARXS"] = <"slot filler at $1 specifies archetype id $2 that does not conform to flat parent slot constraint">
		["VARXNC"] = <"slot node id of slot filler at $1 does not correspond to any ARCHETYPE slot in flat parent">
		["VARXTV"] = <"RM type of slot filler $1 does not conform to RM type $2 of slot or attribute in flat parent">
		["VARXV"] = <"slot filler at $1 does not have matching slot node in flat parent">

		-- C_PRIMITIVE_OBJECT
		["VVST"] = <"term code $1 invalid; must either be an archetype local term or a qualified external term">
		["VPOV"] = <"$1 object node at path $2 leaf value redefinition $3 does not conform to $4 in $5 node at parent path $6">

		-- C_ATTRIBUTE_TUPLE
		["VTPIN"] = <"$1 object node at path $2 has tuple constraint $3 that includes non-tuple constrained attribute $4 in parent at path $5">
		["VTPNC"] = <"$1 object node at path $2 tuple constraint $3 does not conform to counterpart at path $4 in parent">

		-- terminology-related validity
		["VTSD"] = <"code $1 in terminology more specialised than archetype">
		["VTLC"] = <"code $1 in terminology not present in language $2">
		["VTCBU"] = <"expecting URI e.g. <xxx:some.domain/x/y/z?query#fragment> at path $1">
		["VTTBC"] = <"expecting TERMINOLOGY_CODE, e.g. [terminology_id::code]">
		["VTG"] = <"expecting primitive object node at path $1">

		-- rules section
		["VRRLPAR"] = <"Path $1 in rule not matched by any path in archetype">
		["VRRLPRM"] = <"Path $1 matched by archetype but tail extension $2 not found in RM for type $3">
	
		-- description-related validity
		["VDEOL"] = <"original_language section missing">

		-- reference model-related validation
		["VCORM"] = <"type name '$1' at object node at $2 not known in reference model">
		["VCORMT"] = <"type '$1' of object node at $2 not does not conform to type '$3' of $4.$5 in reference model">
		["VCARM"] = <"attribute name '$1' in object node at $2 (type=$3) not among flat set of properties in reference model">
		["VCAEX"] = <"attribute $1 in object node at $2 existence $3 does not conform to existence $4 in reference model">
		["VCACA"] = <"attribute $1 in object node at $2 cardinality $3 does not conform to cardinality $4 in reference model">
		["WCACA"] = <"attribute $1 in object node at $2 cardinality $3 same as in reference model">
		["VCAMs"] = <"single-valued attribute at path $1 cardinality does not conform to cardinality $2 of container attribute in reference model">
		["VCAMm"] = <"container attribute at path $1 with cardinality $2 does not conform to attribute in reference model, which is single-valued">
		["WCAEX"] = <"attribute $1 in object node at $2 existence $3 same as in reference model">
		["WCARMC"] = <"attribute name '$1' in object node at $2 (type=$3) is a computed property in reference model">
		["ICORMTS"] = <"type '$1' of object node at $2 not does not conform to type $3 of $4.$5 in reference model but substitution allowed">
		["ICORMEN"] = <"type '$1' of object node at $2 conformance to enumeration type $3 of $4.$5 in reference model inferred">
		["VCORMEN"] = <"type '$1' of object node at $2 does not conform to enumeration type $3 of $4.$5">
		["VCORMENV"] = <"type '$1' of object node at $2 conformance to enumeration type $3 of $4.$5 in reference model possible, but value $6 not in enumeration">
		["VCORMENU"] = <"type '$1' of object node at $2 and enumeration type $3 of $4.$5 not supported">

		-- ADL 1.4 legacy existence and cardinality removal messages
		["WCAEX14"] = <"ADL 1.4 archetype - attribute $1 in object node at $2 existence $3 does not conform to existence $4 in reference model">
		["WCACA14"] = <"ADL 1.4 archetype - attribute $1 in object node at $2 cardinality $3 does not conform to cardinality $4 in reference model">

		-- validation warnings: in addition to spec, used to help archetype authors
		["WOUC"] = <"code $1 in terminology not used in archetype definition">

		-- ARCHETYPE_TERMINOLOGY
		["VTVSID"] = <"value set identifier code $1 referenced in value-sets section not defined in terminology">
		["VTVSMD"] = <"value set member code $1 referenced in value-sets section not defined in flat terminology">
		["VTVSUQ"] = <"value set member code $1 not unique in value set with id $2">
	>
>

